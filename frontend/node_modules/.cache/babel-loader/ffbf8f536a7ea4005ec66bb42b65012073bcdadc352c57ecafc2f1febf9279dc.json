{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1Copy\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_campaign\\\\campaignOverview.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport InGame from './inGame';\nimport Campaign from './campaign';\nimport Navbar from '../navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CampaignOverview(_ref) {\n  _s();\n  let {\n    changeScreen\n  } = _ref;\n  const [currentScreenCampaign, setCurrentScreenCampaign] = React.useState(2);\n  const [levelNum, setLevelNum] = React.useState(null);\n\n  //callback function handleScreenChange within campaign \n  const handleScreenChangeCampaign = newScreen => {\n    setCurrentScreenCampaign(newScreen);\n  };\n\n  //callback for selecting a level so you can change levelNum and pass it to inGame screen\n  const handleScreenChangeCampaignLevel = (newScreen, levelNum) => {\n    setCurrentScreenCampaign(newScreen);\n    setLevelNum(levelNum);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), currentScreenCampaign === 1 ? /*#__PURE__*/_jsxDEV(InGame, {\n      onScreenChangeCampaign: handleScreenChangeCampaign,\n      levelNum: levelNum,\n      changeScreen: changeScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this) : currentScreenCampaign === 2 ? /*#__PURE__*/_jsxDEV(Campaign, {\n      onScreenChangeCampaignLevel: handleScreenChangeCampaignLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n_s(CampaignOverview, \"uv7cIAOf4NttYi8tR1pW3eCkPww=\");\n_c = CampaignOverview;\nexport default CampaignOverview;\nvar _c;\n$RefreshReg$(_c, \"CampaignOverview\");","map":{"version":3,"names":["React","useState","InGame","Campaign","Navbar","jsxDEV","_jsxDEV","CampaignOverview","_ref","_s","changeScreen","currentScreenCampaign","setCurrentScreenCampaign","levelNum","setLevelNum","handleScreenChangeCampaign","newScreen","handleScreenChangeCampaignLevel","children","fileName","_jsxFileName","lineNumber","columnNumber","onScreenChangeCampaign","onScreenChangeCampaignLevel","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1Copy/app/frontend/src/components/jsx_campaign/campaignOverview.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport InGame from './inGame';\r\nimport Campaign from './campaign';\r\nimport Navbar from '../navbar';\r\n\r\nfunction CampaignOverview({changeScreen}) {\r\n  const [currentScreenCampaign, setCurrentScreenCampaign] = React.useState(2);\r\n  const [levelNum, setLevelNum] = React.useState(null);\r\n\r\n  //callback function handleScreenChange within campaign \r\n  const handleScreenChangeCampaign = (newScreen) => {\r\n    setCurrentScreenCampaign(newScreen);\r\n  };\r\n\r\n  //callback for selecting a level so you can change levelNum and pass it to inGame screen\r\n  const handleScreenChangeCampaignLevel = (newScreen, levelNum) => {\r\n    setCurrentScreenCampaign(newScreen);\r\n    setLevelNum(levelNum);\r\n  };\r\n\r\n    return (\r\n      <div>\r\n      <Navbar/>\r\n      {/* passing through props to be able to change screen and change campaign screen */}\r\n      {/* passing in levelNum (var name) instead of setLevelNum cus we not setting it we just need val */}\r\n        {currentScreenCampaign === 1 ? (\r\n          <InGame onScreenChangeCampaign={handleScreenChangeCampaign} levelNum={levelNum} changeScreen={changeScreen}/>\r\n        ) : currentScreenCampaign === 2 ? (\r\n          <Campaign onScreenChangeCampaignLevel={handleScreenChangeCampaignLevel}/>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default CampaignOverview;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,gBAAgBA,CAAAC,IAAA,EAAiB;EAAAC,EAAA;EAAA,IAAhB;IAACC;EAAY,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC3E,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGd,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMc,0BAA0B,GAAIC,SAAS,IAAK;IAChDJ,wBAAwB,CAACI,SAAS,CAAC;EACrC,CAAC;;EAED;EACA,MAAMC,+BAA+B,GAAGA,CAACD,SAAS,EAAEH,QAAQ,KAAK;IAC/DD,wBAAwB,CAACI,SAAS,CAAC;IACnCF,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAEC,oBACEP,OAAA;IAAAY,QAAA,gBACAZ,OAAA,CAACF,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAGNX,qBAAqB,KAAK,CAAC,gBAC1BL,OAAA,CAACJ,MAAM;MAACqB,sBAAsB,EAAER,0BAA2B;MAACF,QAAQ,EAAEA,QAAS;MAACH,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GAC3GX,qBAAqB,KAAK,CAAC,gBAC7BL,OAAA,CAACH,QAAQ;MAACqB,2BAA2B,EAAEP;IAAgC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GACvE,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACb,EAAA,CA3BMF,gBAAgB;AAAAkB,EAAA,GAAhBlB,gBAAgB;AA6BzB,eAAeA,gBAAgB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}