{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1Copy\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_typle\\\\typle.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport Navbar from \"../navbar\";\nimport axios from 'axios';\nimport Keyboard from \"../jsx_campaign/keyboard\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport WordsTyple from \"./wordsTyple\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Typle() {\n  _s();\n  const apiUrl = 'https://typle-omega.vercel.app';\n  //switch to http://localhost:5000 when on local\n\n  const [paragraph, setParagraph] = useState('');\n  const {\n    user\n  } = useContext(UserContext);\n  const [equiptSkin, setEquiptSkin] = useState(\"Default\");\n  useEffect(() => {\n    if (user) {\n      axios.get(`${apiUrl}/api/userProfile/${user}`).then(response => {\n        setEquiptSkin(response.data.equiptSkin);\n        console.log(equiptSkin);\n      }).catch(error => {\n        console.log('Error fetching user info:', error);\n      });\n    }\n  });\n  useEffect(() => {\n    const fetchParagraph = async () => {\n      const options = {\n        method: 'GET',\n        url: 'https://lorem-ipsum-api.p.rapidapi.com/sentence',\n        params: {\n          amount: '2'\n        },\n        headers: {\n          'X-RapidAPI-Key': '26ba41e54cmsh20c4df296cfa3a5p1bdbdajsnfac8bc6e8239',\n          'X-RapidAPI-Host': 'lorem-ipsum-api.p.rapidapi.com'\n        }\n      };\n      try {\n        const response = await axios.request(options);\n        console.log(\"hi\" + response.data);\n        setParagraph(response.data.text);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchParagraph();\n    const x = {\n      text: \"test ar\"\n    };\n    // setParagraph(x.text);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typle Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordsTyple, {\n      text: paragraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keyboard, {\n      equiptSkin: equiptSkin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Typle, \"/ZvveqDUmxxUsnadOt+n7fzMxvc=\");\n_c = Typle;\nexport default Typle;\nvar _c;\n$RefreshReg$(_c, \"Typle\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Navbar","axios","Keyboard","UserContext","WordsTyple","jsxDEV","_jsxDEV","Typle","_s","apiUrl","paragraph","setParagraph","user","equiptSkin","setEquiptSkin","get","then","response","data","console","log","catch","error","fetchParagraph","options","method","url","params","amount","headers","request","text","x","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1Copy/app/frontend/src/components/jsx_typle/typle.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport Navbar from \"../navbar\";\nimport axios from 'axios';\nimport Keyboard from \"../jsx_campaign/keyboard\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport WordsTyple from \"./wordsTyple\";\n\nfunction Typle() {\n  const apiUrl = 'https://typle-omega.vercel.app';\n  //switch to http://localhost:5000 when on local\n  \n  const [paragraph, setParagraph] = useState('');\n  const {user} = useContext(UserContext);\n\n  const [equiptSkin, setEquiptSkin] = useState(\"Default\");\n\n  useEffect(() => {\n      if(user) {\n          axios.get(`${apiUrl}/api/userProfile/${user}`)\n              .then(response => {\n                  setEquiptSkin(response.data.equiptSkin)\n                  console.log(equiptSkin);\n              })\n              .catch(error => {\n                  console.log('Error fetching user info:', error);\n              });\n      }\n  })\n\n  useEffect(() => {\n    const fetchParagraph = async () => {\n      const options = {\n        method: 'GET',\n        url: 'https://lorem-ipsum-api.p.rapidapi.com/sentence',\n        params: { amount: '2' },\n        headers: {\n          'X-RapidAPI-Key': '26ba41e54cmsh20c4df296cfa3a5p1bdbdajsnfac8bc6e8239',\n          'X-RapidAPI-Host': 'lorem-ipsum-api.p.rapidapi.com'\n        }\n      };\n\n      try {\n        const response = await axios.request(options);\n        console.log(\"hi\" + response.data)\n        setParagraph(response.data.text);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchParagraph();\n    const x = {\n      text: \"test ar\"\n    }\n    // setParagraph(x.text);\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <h1>Typle Test</h1>\n      <WordsTyple text={paragraph}/>\n      <Keyboard equiptSkin={equiptSkin}/>\n    </div>\n  );\n}\n\nexport default Typle;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}