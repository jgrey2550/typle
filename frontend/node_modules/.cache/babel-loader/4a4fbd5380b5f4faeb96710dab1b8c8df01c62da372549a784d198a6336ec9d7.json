{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_profile\\\\highscores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Highscores() {\n  _s();\n  const numLevels = 10;\n  const {\n    user\n  } = useContext(UserContext);\n  const [userStats, setUserStats] = useState(null);\n  const [topWPM, setTopWPM] = useState(null);\n  useEffect(() => {\n    if (user) {\n      axios.get(`http://localhost:5000/api/userStats/${user}`).then(response => {\n        setUserStats(response.data);\n        setTopWPM(response.data.topWPM);\n      }).catch(error => {\n        console.log('Error fetching user stats:', error);\n      });\n    }\n  }, [user]);\n  function generateTableBody() {\n    const maxLevel = numLevels;\n    const allLevels = Array.from({\n      length: maxLevel\n    }, (_, index) => index + 1);\n    const levels = (userStats === null || userStats === void 0 ? void 0 : userStats.levels) || [];\n    const levelTimeMap = new Map();\n    levels.forEach(level => {\n      const levelNumber = level.level;\n      const fastestTime = level.time;\n      levelTimeMap.set(levelNumber, fastestTime);\n    });\n    const tableBody = allLevels.map(levelNumber => {\n      const fastestTime = levelTimeMap.get(levelNumber) || \"incomplete\";\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: levelNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: fastestTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, levelNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this);\n    });\n    return tableBody;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"High scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Fastest Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: generateTableBody()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Top WPM: \", topWPM]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n}\n_s(Highscores, \"vVwrHZunYzeDZdz4PJc1a8a5kUc=\");\n_c = Highscores;\nexport default Highscores;\nvar _c;\n$RefreshReg$(_c, \"Highscores\");","map":{"version":3,"names":["React","useContext","useEffect","useState","UserContext","axios","jsxDEV","_jsxDEV","Highscores","_s","numLevels","user","userStats","setUserStats","topWPM","setTopWPM","get","then","response","data","catch","error","console","log","generateTableBody","maxLevel","allLevels","Array","from","length","_","index","levels","levelTimeMap","Map","forEach","level","levelNumber","fastestTime","time","set","tableBody","map","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1/app/frontend/src/components/jsx_profile/highscores.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from \"react\";\r\nimport { UserContext } from \"../../contexts/userContext\";\r\nimport axios from \"axios\";\r\n\r\nfunction Highscores() {\r\n    const numLevels = 10;\r\n\r\n    const {user } = useContext(UserContext);\r\n    const [userStats, setUserStats] = useState(null);\r\n    const [topWPM, setTopWPM] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(user) {\r\n            axios.get(`http://localhost:5000/api/userStats/${user}`)\r\n                .then(response => {\r\n                    setUserStats(response.data);\r\n                    setTopWPM(response.data.topWPM);\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error fetching user stats:', error);\r\n                });\r\n        }\r\n    }, [user]);\r\n\r\n    function generateTableBody() {\r\n        const maxLevel = numLevels;\r\n        const allLevels = Array.from({ length: maxLevel }, (_, index) => index + 1);\r\n    \r\n        const levels = userStats?.levels || [];\r\n        const levelTimeMap = new Map();\r\n        levels.forEach((level) => {\r\n          const levelNumber = level.level;\r\n          const fastestTime = level.time;\r\n          levelTimeMap.set(levelNumber, fastestTime);\r\n        });\r\n    \r\n        const tableBody = allLevels.map((levelNumber) => {\r\n          const fastestTime = levelTimeMap.get(levelNumber) || \"incomplete\";\r\n          return (\r\n            <tr key={levelNumber}>\r\n              <td>{levelNumber}</td>\r\n              <td>{fastestTime}</td>\r\n            </tr>\r\n          );\r\n        });\r\n    \r\n        return tableBody;\r\n      }\r\n\r\n    return <div>\r\n        <h1>High scores</h1>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>Level</td>\r\n                    <td>Fastest Time</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {generateTableBody()}\r\n            </tbody>\r\n        </table>\r\n        <br />\r\n        <h3>Top WPM: {topWPM}</h3>\r\n    </div>\r\n}\r\n\r\nexport default Highscores;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}