{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1Copy\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_profile\\\\skinsList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../contexts/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SkinsList() {\n  _s();\n  const apiUrl = 'https://typle-omega.vercel.app';\n  //switch to http://localhost:5000 when on local\n\n  const {\n    user\n  } = useContext(UserContext);\n  const [skins, setSkins] = useState(null);\n  useEffect(() => {\n    if (user) {\n      axios.get(`${apiUrl}/api/userProfile/${user}`).then(response => {\n        setSkins(response.data.skins);\n      }).catch(error => {\n        console.log(\"error fetching skins \" + error);\n      });\n    }\n  });\n  function changeEquiptSkin(newSkin) {\n    if (user) {\n      alert(\"Changed skin to \" + newSkin);\n      axios.put(`${apiUrl}/api/userProfile/${user}/equiptSkin`, {\n        newSkin\n      }).then(response => {\n        console.log('User profile updated:', response.data);\n      }).catch(error => {\n        console.error('Error updating user profile:', error);\n      });\n    }\n  }\n  function renderOwnedSkins(items) {\n    if (items === null) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't own any skins!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this);\n    }\n    const ownedSkins = items.filter(item => item.name);\n    return ownedSkins.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-skins\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Skin: \", item.name]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeEquiptSkin(item.name),\n        children: \"Equipt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Owned Skins:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), renderOwnedSkins(skins)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n}\n_s(SkinsList, \"1BrGAYZqbpIrE/XhaxrPxTgv1t4=\");\n_c = SkinsList;\nexport default SkinsList;\nvar _c;\n$RefreshReg$(_c, \"SkinsList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","UserContext","jsxDEV","_jsxDEV","SkinsList","_s","apiUrl","user","skins","setSkins","get","then","response","data","catch","error","console","log","changeEquiptSkin","newSkin","alert","put","renderOwnedSkins","items","children","fileName","_jsxFileName","lineNumber","columnNumber","ownedSkins","filter","item","name","map","index","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1Copy/app/frontend/src/components/jsx_profile/skinsList.jsx"],"sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"../../contexts/userContext\";\n\nfunction SkinsList() {\n    const apiUrl = 'https://typle-omega.vercel.app';\n    //switch to http://localhost:5000 when on local\n    \n    const {user} = useContext(UserContext);\n    const [skins, setSkins] = useState(null);\n\n    useEffect(() => {\n        if(user) {\n            axios.get(`${apiUrl}/api/userProfile/${user}`)\n                .then(response => {\n                    setSkins(response.data.skins);\n                })\n                .catch(error => {\n                    console.log(\"error fetching skins \" + error);\n                })\n        }\n    })\n\n    function changeEquiptSkin(newSkin) {\n      if(user) {\n        alert(\"Changed skin to \" + newSkin);\n        axios.put(`${apiUrl}/api/userProfile/${user}/equiptSkin`, {newSkin})\n        .then(response => {\n            console.log('User profile updated:', response.data);\n        })\n        .catch(error => {\n            console.error('Error updating user profile:', error);\n        });\n      }\n    }\n\n    function renderOwnedSkins(items) {\n        if (items === null) {\n          return <p>You don't own any skins!</p>;\n        }\n        const ownedSkins = items.filter(item => item.name);\n        return ownedSkins.map((item, index) => (\n          <div className=\"profile-skins\" key={index}>\n            <p key={index}>\n              Skin: {item.name}\n            </p>\n            <button onClick={() => changeEquiptSkin(item.name)}>Equipt</button>\n          </div>\n        ));\n      }\n\n    return <div>\n        <h1>Owned Skins:</h1>\n        {renderOwnedSkins(skins)}\n    </div>\n}\n\nexport default SkinsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}