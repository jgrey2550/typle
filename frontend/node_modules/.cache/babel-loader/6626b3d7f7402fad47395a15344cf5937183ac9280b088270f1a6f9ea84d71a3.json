{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1Copy\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_leaderboards\\\\typleBoards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../navbar\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TypleBoards() {\n  _s();\n  const [data, setData] = useState(null);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/userStatsAll\").then(response => {\n      const userStats = response.data;\n      setData(userStats);\n    }).catch(error => {\n      console.log(\"Error fetching info:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (data) {\n      const fetchData = async () => {\n        const leaderboardData = await Promise.all(data.map(async user => {\n          const topWPM = user.topWPM;\n          const userId = user.userId;\n          const username = await getUsername(userId);\n          return {\n            topWPM,\n            username\n          };\n        }));\n        leaderboardData.sort((a, b) => b.topWPM - a.topWPM); // Sort by topWPM from largest to smallest\n        setLeaderboardData(leaderboardData);\n      };\n      fetchData();\n    }\n  }, [data]);\n  const getUsername = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/user/${userId}`);\n      return response.data.username;\n    } catch (error) {\n      console.log(\"Error fetching username:\", error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Typle Leaderboards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Placement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Top WPM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboardData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.topWPM\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TypleBoards, \"IoylODJD6jgNOL7khifVmMUbrlw=\");\n_c = TypleBoards;\nexport default TypleBoards;\nvar _c;\n$RefreshReg$(_c, \"TypleBoards\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","axios","jsxDEV","_jsxDEV","TypleBoards","_s","data","setData","leaderboardData","setLeaderboardData","get","then","response","userStats","catch","error","console","log","fetchData","Promise","all","map","user","topWPM","userId","username","getUsername","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","entry","index","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1Copy/app/frontend/src/components/jsx_leaderboards/typleBoards.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../navbar\";\r\nimport axios from \"axios\";\r\n\r\nfunction TypleBoards() {\r\n  const [data, setData] = useState(null);\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/userStatsAll\")\r\n      .then(response => {\r\n        const userStats = response.data;\r\n        setData(userStats);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error fetching info:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const fetchData = async () => {\r\n        const leaderboardData = await Promise.all(\r\n          data.map(async user => {\r\n            const topWPM = user.topWPM;\r\n            const userId = user.userId;\r\n            const username = await getUsername(userId);\r\n            return { topWPM, username };\r\n          })\r\n        );\r\n        leaderboardData.sort((a, b) => b.topWPM - a.topWPM); // Sort by topWPM from largest to smallest\r\n        setLeaderboardData(leaderboardData);\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [data]);\r\n\r\n  const getUsername = async userId => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/user/${userId}`);\r\n      return response.data.username;\r\n    } catch (error) {\r\n      console.log(\"Error fetching username:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h1>Typle Leaderboards</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Placement</th>\r\n            <th>Top WPM</th>\r\n            <th>Username</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboardData.map((entry, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{entry.topWPM}</td>\r\n              <td>{entry.username}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TypleBoards;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}