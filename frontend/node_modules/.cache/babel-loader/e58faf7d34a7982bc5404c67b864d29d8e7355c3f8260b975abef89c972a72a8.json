{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_leaderboards\\\\levelsBoards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LevelsBoards() {\n  _s();\n  const [data, setData] = useState(null);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [selectedLevel, setSelectedLevel] = useState(1);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/userStatsAll\").then(response => {\n      const userStats = response.data;\n      setData(userStats);\n    }).catch(error => {\n      console.log(\"Error fetching info:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (data) {\n      const fetchData = async () => {\n        const levelsData = await Promise.all(Array.from({\n          length: 10\n        }, (_, index) => index + 1).map(async levelNumber => {\n          const levelTimes = [];\n          const usernamePromises = [];\n          for (const user of data) {\n            const levelInfo = user.levels.find(level => level.level === levelNumber);\n            if (levelInfo) {\n              const usernamePromise = getUsername(user.userId);\n              usernamePromises.push(usernamePromise);\n              levelTimes.push({\n                time: levelInfo.time,\n                username: null\n              });\n            }\n          }\n          const usernames = await Promise.all(usernamePromises);\n          usernames.forEach((username, i) => {\n            levelTimes[i].username = username;\n          });\n          levelTimes.sort((a, b) => a.time - b.time); // Sort times from lowest to highest\n          return levelTimes;\n        }));\n        setLeaderboardData(levelsData);\n      };\n      fetchData();\n    }\n  }, [data]);\n  const getUsername = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/user/${userId}`);\n      return response.data.username;\n    } catch (error) {\n      console.log(\"Error fetching username:\", error);\n      return null;\n    }\n  };\n  const handleLevelChange = e => {\n    setSelectedLevel(parseInt(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Level Leaderboards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"level-select\",\n      value: selectedLevel,\n      onChange: handleLevelChange,\n      children: Array.from({\n        length: 10\n      }, (_, index) => index + 1).map(levelNumber => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: levelNumber,\n        children: [\"Level \", levelNumber]\n      }, levelNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Level \", selectedLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboardData[selectedLevel - 1] && leaderboardData[selectedLevel - 1].map((userInfo, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userInfo.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userInfo.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(LevelsBoards, \"NtwLwSngTpAVS3zKsQwUJpYK85I=\");\n_c = LevelsBoards;\nexport default LevelsBoards;\nvar _c;\n$RefreshReg$(_c, \"LevelsBoards\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","LevelsBoards","_s","data","setData","leaderboardData","setLeaderboardData","selectedLevel","setSelectedLevel","get","then","response","userStats","catch","error","console","log","fetchData","levelsData","Promise","all","Array","from","length","_","index","map","levelNumber","levelTimes","usernamePromises","user","levelInfo","levels","find","level","usernamePromise","getUsername","userId","push","time","username","usernames","forEach","i","sort","a","b","handleLevelChange","e","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","userInfo","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1/app/frontend/src/components/jsx_leaderboards/levelsBoards.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Navbar from \"../navbar\";\r\n\r\nfunction LevelsBoards() {\r\n  const [data, setData] = useState(null);\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  const [selectedLevel, setSelectedLevel] = useState(1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/userStatsAll\")\r\n      .then(response => {\r\n        const userStats = response.data;\r\n        setData(userStats);\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error fetching info:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const fetchData = async () => {\r\n        const levelsData = await Promise.all(\r\n          Array.from({ length: 10 }, (_, index) => index + 1).map(\r\n            async levelNumber => {\r\n              const levelTimes = [];\r\n              const usernamePromises = [];\r\n              for (const user of data) {\r\n                const levelInfo = user.levels.find(\r\n                  level => level.level === levelNumber\r\n                );\r\n                if (levelInfo) {\r\n                  const usernamePromise = getUsername(user.userId);\r\n                  usernamePromises.push(usernamePromise);\r\n                  levelTimes.push({ time: levelInfo.time, username: null });\r\n                }\r\n              }\r\n              const usernames = await Promise.all(usernamePromises);\r\n              usernames.forEach((username, i) => {\r\n                levelTimes[i].username = username;\r\n              });\r\n              levelTimes.sort((a, b) => a.time - b.time); // Sort times from lowest to highest\r\n              return levelTimes;\r\n            }\r\n          )\r\n        );\r\n        setLeaderboardData(levelsData);\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [data]);\r\n\r\n  const getUsername = async userId => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/api/user/${userId}`\r\n      );\r\n      return response.data.username;\r\n    } catch (error) {\r\n      console.log(\"Error fetching username:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleLevelChange = e => {\r\n    setSelectedLevel(parseInt(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h1>Level Leaderboards</h1>\r\n      <select\r\n        id=\"level-select\"\r\n        value={selectedLevel}\r\n        onChange={handleLevelChange}\r\n      >\r\n        {Array.from({ length: 10 }, (_, index) => index + 1).map(\r\n          levelNumber => (\r\n            <option key={levelNumber} value={levelNumber}>\r\n              Level {levelNumber}\r\n            </option>\r\n          )\r\n        )}\r\n      </select>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Level {selectedLevel}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboardData[selectedLevel - 1] &&\r\n            leaderboardData[selectedLevel - 1].map((userInfo, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <p>{index + 1}</p>\r\n                </td>\r\n                <td>\r\n                  <p>{userInfo.time}</p>\r\n                </td>\r\n                <td>\r\n                  <p>{userInfo.username}</p>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LevelsBoards;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}