{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1Copy\\\\app\\\\frontend\\\\src\\\\components\\\\jsx_leaderboards\\\\levelsBoards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { ApiContext } from \"../../contexts/apiContext\";\nimport axios from \"axios\";\nimport Navbar from \"../navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LevelsBoards() {\n  _s();\n  const apiUrl = 'https://typle-omega.vercel.app';\n  //switch to http://localhost:5000 when on local\n\n  const [data, setData] = useState(null);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [selectedLevel, setSelectedLevel] = useState(1);\n  useEffect(() => {\n    axios.get(`${apiUrl}/api/userStatsAll`).then(response => {\n      const userStats = response.data;\n      setData(userStats);\n    }).catch(error => {\n      console.log(\"Error fetching info:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    if (data) {\n      const fetchData = async () => {\n        const levelsData = await Promise.all(Array.from({\n          length: 10\n        }, (_, index) => index + 1).map(async levelNumber => {\n          const levelTimes = [];\n          const usernamePromises = [];\n          for (const user of data) {\n            const levelInfo = user.levels.find(level => level.level === levelNumber);\n            if (levelInfo) {\n              const usernamePromise = getUsername(user.userId);\n              usernamePromises.push(usernamePromise);\n              levelTimes.push({\n                time: levelInfo.time,\n                username: null\n              });\n            }\n          }\n          const usernames = await Promise.all(usernamePromises);\n          usernames.forEach((username, i) => {\n            levelTimes[i].username = username;\n          });\n          levelTimes.sort((a, b) => a.time - b.time); // Sort times from lowest to highest\n          return levelTimes;\n        }));\n        setLeaderboardData(levelsData);\n      };\n      fetchData();\n    }\n  }, [data]);\n  const getUsername = async userId => {\n    try {\n      const response = await axios.get(`${apiUrl}/api/user/${userId}`);\n      return response.data.username;\n    } catch (error) {\n      console.log(\"Error fetching username:\", error);\n      return null;\n    }\n  };\n  const handleLevelChange = e => {\n    setSelectedLevel(parseInt(e.target.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Level Leaderboards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"level-select\",\n      value: selectedLevel,\n      onChange: handleLevelChange,\n      children: Array.from({\n        length: 10\n      }, (_, index) => index + 1).map(levelNumber => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: levelNumber,\n        children: [\"Level \", levelNumber]\n      }, levelNumber, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [\"Level \", selectedLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboardData[selectedLevel - 1] && leaderboardData[selectedLevel - 1].map((userInfo, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userInfo.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: userInfo.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(LevelsBoards, \"NtwLwSngTpAVS3zKsQwUJpYK85I=\");\n_c = LevelsBoards;\nexport default LevelsBoards;\nvar _c;\n$RefreshReg$(_c, \"LevelsBoards\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ApiContext","axios","Navbar","jsxDEV","_jsxDEV","LevelsBoards","_s","apiUrl","data","setData","leaderboardData","setLeaderboardData","selectedLevel","setSelectedLevel","get","then","response","userStats","catch","error","console","log","fetchData","levelsData","Promise","all","Array","from","length","_","index","map","levelNumber","levelTimes","usernamePromises","user","levelInfo","levels","find","level","usernamePromise","getUsername","userId","push","time","username","usernames","forEach","i","sort","a","b","handleLevelChange","e","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","userInfo","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1Copy/app/frontend/src/components/jsx_leaderboards/levelsBoards.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { ApiContext } from \"../../contexts/apiContext\";\nimport axios from \"axios\";\nimport Navbar from \"../navbar\";\n\nfunction LevelsBoards() {\n  const apiUrl = 'https://typle-omega.vercel.app';\n  //switch to http://localhost:5000 when on local\n  \n  const [data, setData] = useState(null);\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [selectedLevel, setSelectedLevel] = useState(1);\n\n  useEffect(() => {\n    axios\n      .get(`${apiUrl}/api/userStatsAll`)\n      .then(response => {\n        const userStats = response.data;\n        setData(userStats);\n      })\n      .catch(error => {\n        console.log(\"Error fetching info:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      const fetchData = async () => {\n        const levelsData = await Promise.all(\n          Array.from({ length: 10 }, (_, index) => index + 1).map(\n            async levelNumber => {\n              const levelTimes = [];\n              const usernamePromises = [];\n              for (const user of data) {\n                const levelInfo = user.levels.find(\n                  level => level.level === levelNumber\n                );\n                if (levelInfo) {\n                  const usernamePromise = getUsername(user.userId);\n                  usernamePromises.push(usernamePromise);\n                  levelTimes.push({ time: levelInfo.time, username: null });\n                }\n              }\n              const usernames = await Promise.all(usernamePromises);\n              usernames.forEach((username, i) => {\n                levelTimes[i].username = username;\n              });\n              levelTimes.sort((a, b) => a.time - b.time); // Sort times from lowest to highest\n              return levelTimes;\n            }\n          )\n        );\n        setLeaderboardData(levelsData);\n      };\n\n      fetchData();\n    }\n  }, [data]);\n\n  const getUsername = async userId => {\n    try {\n      const response = await axios.get(\n        `${apiUrl}/api/user/${userId}`\n      );\n      return response.data.username;\n    } catch (error) {\n      console.log(\"Error fetching username:\", error);\n      return null;\n    }\n  };\n\n  const handleLevelChange = e => {\n    setSelectedLevel(parseInt(e.target.value));\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <h1>Level Leaderboards</h1>\n      <select\n        id=\"level-select\"\n        value={selectedLevel}\n        onChange={handleLevelChange}\n      >\n        {Array.from({ length: 10 }, (_, index) => index + 1).map(\n          levelNumber => (\n            <option key={levelNumber} value={levelNumber}>\n              Level {levelNumber}\n            </option>\n          )\n        )}\n      </select>\n      <table>\n        <thead>\n          <tr>\n            <th>Level {selectedLevel}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {leaderboardData[selectedLevel - 1] &&\n            leaderboardData[selectedLevel - 1].map((userInfo, index) => (\n              <tr key={index}>\n                <td>\n                  <p>{index + 1}</p>\n                </td>\n                <td>\n                  <p>{userInfo.time}</p>\n                </td>\n                <td>\n                  <p>{userInfo.username}</p>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default LevelsBoards;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}