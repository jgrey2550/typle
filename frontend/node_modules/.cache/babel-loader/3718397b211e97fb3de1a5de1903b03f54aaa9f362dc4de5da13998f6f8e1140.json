{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brandon\\\\html2\\\\typle\\\\typlev1\\\\app\\\\src\\\\components\\\\jsx_campaign\\\\timer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer(_ref) {\n  _s();\n  let {\n    timerOnOff,\n    elapsedTime,\n    setElapsedTime\n  } = _ref;\n  React.useEffect(() => {\n    //intervalId is what is what the setInterval method puts data into\n    let intervalId;\n    let startTime;\n    if (timerOnOff === 1) {\n      startTime = Date.now();\n      //setInterval built in java function 2 params (function, interval)\n      //so updates time every 1 milisecond\n      intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const newTime = currentTime - startTime;\n        setElapsedTime(newTime);\n      }, 1);\n    }\n    if (timerOnOff === 2) {\n      setElapsedTime(0);\n    }\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [timerOnOff]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", elapsedTime / 1000, \" secondes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Timer","_ref","_s","timerOnOff","elapsedTime","setElapsedTime","useEffect","intervalId","startTime","Date","now","setInterval","currentTime","newTime","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/brandon/html2/typle/typlev1/app/src/components/jsx_campaign/timer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Timer({ timerOnOff, elapsedTime, setElapsedTime}) {\r\n  React.useEffect(() => {\r\n    //intervalId is what is what the setInterval method puts data into\r\n    let intervalId;\r\n    let startTime;\r\n\r\n    if (timerOnOff === 1) {\r\n        startTime = Date.now();\r\n        //setInterval built in java function 2 params (function, interval)\r\n        //so updates time every 1 milisecond\r\n        intervalId = setInterval(() => {\r\n            const currentTime = Date.now();\r\n            const newTime = currentTime - startTime;\r\n            setElapsedTime(newTime);\r\n        }, 1);\r\n    }\r\n\r\n    if(timerOnOff === 2) {\r\n        setElapsedTime(0);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [timerOnOff]);\r\n\r\n  return (\r\n    <div>\r\n      <p>Time: {elapsedTime/1000} secondes</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAAC,IAAA,EAA6C;EAAAC,EAAA;EAAA,IAA5C;IAAEC,UAAU;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAAJ,IAAA;EACvDL,KAAK,CAACU,SAAS,CAAC,MAAM;IACpB;IACA,IAAIC,UAAU;IACd,IAAIC,SAAS;IAEb,IAAIL,UAAU,KAAK,CAAC,EAAE;MAClBK,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB;MACA;MACAH,UAAU,GAAGI,WAAW,CAAC,MAAM;QAC3B,MAAMC,WAAW,GAAGH,IAAI,CAACC,GAAG,CAAC,CAAC;QAC9B,MAAMG,OAAO,GAAGD,WAAW,GAAGJ,SAAS;QACvCH,cAAc,CAACQ,OAAO,CAAC;MAC3B,CAAC,EAAE,CAAC,CAAC;IACT;IAEA,IAAGV,UAAU,KAAK,CAAC,EAAE;MACjBE,cAAc,CAAC,CAAC,CAAC;IACrB;IAEA,OAAO,MAAM;MACXS,aAAa,CAACP,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,GAAG,QAAM,EAACX,WAAW,GAAC,IAAI,EAAC,WAAS;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAACjB,EAAA,CA/BQF,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}